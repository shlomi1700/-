<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SmartSales AI - מתוקן ומושלם</title>
    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --success-gradient: linear-gradient(135deg, #10b981 0%, #059669 100%);
            --danger-gradient: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            --warning-gradient: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
            --text-primary: #1f2937;
            --text-secondary: #6b7280;
            --bg-light: #f9fafb;
            --border-color: #e5e7eb;
            --shadow-xl: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
            direction: rtl;
            overflow-x: hidden;
        }

        .demo-container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .demo-header {
            text-align: center;
            margin-bottom: 30px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 25px;
            border-radius: 20px;
            box-shadow: var(--shadow-xl);
        }

        .demo-header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 700;
        }

        .config-panels {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .config-panel {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 20px;
            border-radius: 15px;
            box-shadow: var(--shadow-xl);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .config-panel h4 {
            color: var(--text-primary);
            margin-bottom: 15px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .config-input {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid var(--border-color);
            border-radius: 10px;
            margin: 8px 0;
            font-size: 14px;
            transition: all 0.3s ease;
            background: white;
        }

        .config-input:focus {
            border-color: #667eea;
            outline: none;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .config-button {
            background: var(--primary-gradient);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 10px;
            cursor: pointer;
            width: 100%;
            font-weight: 500;
            transition: all 0.3s ease;
            margin-top: 10px;
        }

        .config-button:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-xl);
        }

        .config-button.success {
            background: var(--success-gradient);
        }

        .config-button.danger {
            background: var(--danger-gradient);
        }

        .config-button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .status-indicator {
            margin-top: 10px;
            padding: 10px;
            border-radius: 8px;
            font-size: 12px;
            text-align: center;
            font-weight: 500;
        }

        .status-success {
            background: rgba(16, 185, 129, 0.1);
            color: #10b981;
            border: 1px solid rgba(16, 185, 129, 0.2);
        }

        .status-error {
            background: rgba(239, 68, 68, 0.1);
            color: #ef4444;
            border: 1px solid rgba(239, 68, 68, 0.2);
        }

        .status-warning {
            background: rgba(245, 158, 11, 0.1);
            color: #f59e0b;
            border: 1px solid rgba(245, 158, 11, 0.2);
        }

        .status-loading {
            background: rgba(59, 130, 246, 0.1);
            color: #3b82f6;
            border: 1px solid rgba(59, 130, 246, 0.2);
        }

        #smartsales-chat-widget {
           position: fixed;
           bottom: 20px;
           right: 20px;
           z-index: 9999;
           font-family: inherit;
           direction: rtl;
        }

        #smartsales-chat-bubble {
            width: 70px;
            height: 70px;
            background: var(--primary-gradient);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            color: white;
            font-size: 28px;
            box-shadow: var(--shadow-xl);
            transition: all 0.3s ease;
            position: relative;
            animation: bounce 2s infinite;
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-8px); }
            60% { transform: translateY(-4px); }
        }

        #smartsales-chat-bubble:hover {
            transform: scale(1.1) translateY(-5px);
            box-shadow: 0 20px 40px rgba(102, 126, 234, 0.4);
        }

        .chat-notification {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #ef4444;
            color: white;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            font-size: 11px;
            display: flex;
            align-items: center;
            justify-content: center;
            animation: pulse 1.5s infinite;
            font-weight: bold;
        }

        @keyframes pulse {
            0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7); }
            70% { transform: scale(1.1); box-shadow: 0 0 0 10px rgba(239, 68, 68, 0); }
            100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(239, 68, 68, 0); }
        }

        #smartsales-chat-window {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 400px;
            height: 600px;
            background: white;
            border-radius: 20px;
            box-shadow: var(--shadow-xl);
            display: none;
            flex-direction: column;
            overflow: hidden;
            opacity: 0;
            scale: 0.8;
            transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
        }

        #smartsales-chat-window.open {
            display: flex;
            opacity: 1;
            scale: 1;
        }

        .chat-header {
            background: var(--primary-gradient);
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: relative;
        }

        .chat-header h3 {
            margin: 0;
            font-size: 16px;
            font-weight: 600;
        }

        .chat-status {
            font-size: 11px;
            opacity: 0.9;
            margin-top: 3px;
        }

        #smartsales-close-chat {
            background: none;
            border: none;
            color: white;
            font-size: 20px;
            cursor: pointer;
            padding: 8px;
            border-radius: 50%;
            width: 36px;
            height: 36px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #smartsales-close-chat:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: rotate(90deg);
        }

        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
            background: var(--bg-light);
            scrollbar-width: thin;
            scrollbar-color: rgba(102, 126, 234, 0.3) transparent;
        }

        .chat-messages::-webkit-scrollbar {
            width: 6px;
        }

        .chat-messages::-webkit-scrollbar-thumb {
            background: rgba(102, 126, 234, 0.3);
            border-radius: 3px;
        }

        .bot-message, .user-message {
            margin-bottom: 15px;
            display: flex;
            animation: messageSlideIn 0.3s ease-out;
        }

        @keyframes messageSlideIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .bot-message { justify-content: flex-start; }
        .user-message { justify-content: flex-end; }

        .message-content {
            max-width: 85%;
            padding: 12px 16px;
            border-radius: 18px;
            font-size: 14px;
            line-height: 1.5;
            position: relative;
            word-wrap: break-word;
        }

        .bot-message .message-content {
            background: white;
            color: var(--text-primary);
            border-bottom-right-radius: 4px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            border: 1px solid #e5e7eb;
        }

        .user-message .message-content {
            background: var(--primary-gradient);
            color: white;
            border-bottom-left-radius: 4px;
        }

        .urgency-timer {
            background: var(--danger-gradient);
            color: white;
            padding: 15px;
            border-radius: 12px;
            text-align: center;
            margin: 10px 0;
            font-weight: bold;
            animation: urgentPulse 1s infinite;
        }

        @keyframes urgentPulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.02); }
        }

        .timer-display {
            font-size: 24px;
            font-family: 'Courier New', monospace;
            margin: 10px 0;
            text-shadow: 0 0 10px rgba(255,255,255,0.5);
        }

        .product-card {
            background: white;
            border-radius: 15px;
            padding: 18px;
            margin: 12px 0;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            border: 1px solid #e5e7eb;
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .product-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: var(--primary-gradient);
        }

        .product-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.2);
        }

        .product-card.limited-stock::after {
            content: '🔥 מלאי מוגבל!';
            position: absolute;
            top: 10px;
            left: 10px;
            background: #ef4444;
            color: white;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 10px;
            font-weight: bold;
            animation: blink 1s infinite;
        }

        @keyframes blink {
            0%, 50% { opacity: 1; }
            51%, 100% { opacity: 0.7; }
        }

        .product-image {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 12px;
            float: right;
            margin-left: 15px;
        }

        .product-name {
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 8px;
            font-size: 15px;
        }

        .product-price {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 10px;
        }

        .current-price {
            color: #ef4444;
            font-weight: 700;
            font-size: 18px;
        }

        .original-price {
            text-decoration: line-through;
            color: #9ca3af;
            font-size: 14px;
        }

        .discount-badge {
            background: #ef4444;
            color: white;
            padding: 2px 6px;
            border-radius: 8px;
            font-size: 10px;
            font-weight: bold;
        }

        .product-description {
            color: var(--text-secondary);
            font-size: 13px;
            margin-bottom: 12px;
            line-height: 1.4;
        }

        .product-features {
            display: flex;
            flex-wrap: wrap;
            gap: 6px;
            margin-bottom: 15px;
        }

        .feature-tag {
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
            padding: 3px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 500;
        }

        .product-actions {
            display: flex;
            gap: 8px;
            clear: both;
            margin-top: 10px;
        }

        .action-button {
            flex: 1;
            padding: 10px 12px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 12px;
            font-weight: 600;
            transition: all 0.3s ease;
            text-align: center;
        }

        .primary-action {
            background: var(--primary-gradient);
            color: white;
        }

        .secondary-action {
            background: white;
            color: #667eea;
            border: 2px solid #667eea;
        }

        .urgent-action {
            background: var(--danger-gradient);
            color: white;
            animation: urgentButton 2s infinite;
        }

        @keyframes urgentButton {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .action-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        }

        .chat-input-container {
            display: flex;
            padding: 20px;
            background: white;
            border-top: 1px solid #e5e7eb;
            gap: 12px;
        }

        #smartsales-input {
            flex: 1;
            border: 2px solid #e5e7eb;
            border-radius: 25px;
            padding: 12px 18px;
            font-size: 14px;
            outline: none;
            direction: rtl;
            transition: all 0.3s ease;
            background: #f9fafb;
        }

        #smartsales-input:focus {
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        #smartsales-send {
            background: var(--primary-gradient);
            border: none;
            border-radius: 50%;
            width: 48px;
            height: 48px;
            cursor: pointer;
            color: white;
            font-size: 18px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #smartsales-send:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        }

        .typing-indicator {
            padding: 15px;
            text-align: center;
            color: #6b7280;
            font-style: italic;
            display: none;
            background: #f9fafb;
        }

        .typing-indicator.show {
            display: block;
        }

        .typing-dots {
            display: inline-flex;
            gap: 4px;
            margin-left: 8px;
        }

        .typing-dots span {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: #6b7280;
            animation: typing 1.4s infinite ease-in-out;
        }

        .typing-dots span:nth-child(1) { animation-delay: -0.32s; }
        .typing-dots span:nth-child(2) { animation-delay: -0.16s; }

        @keyframes typing {
            0%, 80%, 100% { transform: scale(0.8); opacity: 0.5; }
            40% { transform: scale(1); opacity: 1; }
        }

        /* Demo Controls */
        .demo-controls {
            position: fixed;
            bottom: 20px;
            left: 20px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 15px;
            border-radius: 15px;
            box-shadow: var(--shadow-xl);
            z-index: 1000;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .demo-controls h4 {
            margin-bottom: 10px;
            color: var(--text-primary);
            font-weight: 600;
            font-size: 14px;
        }

        .demo-button {
            background: var(--primary-gradient);
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 11px;
            font-weight: 500;
            margin: 2px;
            transition: all 0.3s ease;
        }

        .demo-button:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
        }

        @media (max-width: 768px) {
            body {
                padding: 10px;
            }
            
            .config-panels {
                grid-template-columns: 1fr;
            }
            
            #smartsales-chat-window {
                width: calc(100vw - 40px);
                height: calc(100vh - 100px);
                max-width: 400px;
                max-height: 600px;
            }

            .demo-controls {
                display: none;
            }
        }
    </style>
</head>
<body>
    <div class="demo-container">
        <div class="demo-header">
            <h1>🧠🚀 SmartSales AI - Ultimate Sales Machine</h1>
            <p>מכונת המכירות הכי אגרסיבית וחכמה שקיימת! עם טכניקות FOMO, Urgency ו-Pressure Sales</p>
        </div>

        <div class="config-panels">
            <!-- OpenAI Configuration -->
            <div class="config-panel">
                <h4>🤖 הגדרות GPT-4</h4>
                <input type="password" 
                       id="openai-key" 
                       class="config-input" 
                       placeholder="מפתח OpenAI API">
                <button onclick="saveAndTestOpenAIKey()" id="openai-save-btn" class="config-button">💾 שמור ובדוק מפתח</button>
                <div id="openai-status" class="status-indicator" style="display: none;"></div>
            </div>

            <!-- WooCommerce Configuration -->
            <div class="config-panel">
                <h4>🛒 הגדרות WooCommerce</h4>
                <input type="url" 
                       id="woo-url" 
                       class="config-input" 
                       placeholder="https://yoursite.com">
                <input type="text" 
                       id="woo-consumer-key" 
                       class="config-input" 
                       placeholder="Consumer Key">
                <input type="password" 
                       id="woo-consumer-secret" 
                       class="config-input" 
                       placeholder="Consumer Secret">
                <button onclick="saveWooConfig()" class="config-button">🔗 חבר לחנות</button>
                <button onclick="testWooConnection()" class="config-button success">🧪 בדוק חיבור</button>
                <div id="woo-status" class="status-indicator" style="display: none;"></div>
            </div>

            <!-- Sales Configuration -->
            <div class="config-panel">
                <h4>💰 הגדרות מכירות אגרסיביות</h4>
                <label style="display: block; margin: 10px 0; color: #374151;">
                    <input type="checkbox" id="enable-urgency" checked> הפעל טיימרים דחופים
                </label>
                <label style="display: block; margin: 10px 0; color: #374151;">
                    <input type="checkbox" id="enable-scarcity" checked> הפעל "מלאי מוגבל"
                </label>
                <label style="display: block; margin: 10px 0; color: #374151;">
                    <input type="checkbox" id="enable-discounts" checked> הפעל הנחות מיידיות
                </label>
                <input type="number" 
                       id="discount-percent" 
                       class="config-input" 
                       placeholder="אחוז הנחה (5-20%)" 
                       min="5" max="20" value="10">
                <button onclick="saveSalesConfig()" class="config-button danger">🔥 הפעל מכירות אגרסיביות</button>
                <div id="sales-status" class="status-indicator status-warning" style="display: block;">
                    ⚡ מצב מכירות אגרסיבי מופעל!
                </div>
            </div>
        </div>
    </div>

    <!-- Demo Controls -->
    <div class="demo-controls">
        <h4>🎮 בקרות דמו</h4>
        <button onclick="startDemo('sunglasses')" class="demo-button">🕶️ משקפי שמש</button>
        <button onclick="startDemo('phone')" class="demo-button">📱 טלפונים</button>
        <button onclick="startDemo('urgent')" class="demo-button">⚡ דחוף</button>
        <button onclick="clearChat()" class="demo-button">🗑️ נקה</button>
    </div>

    <!-- Chat Widget -->
    <div id="smartsales-chat-widget" class="minimized">
        <div id="smartsales-chat-bubble">
            🤖<span class="chat-notification">AI</span>
        </div>
        <div id="smartsales-chat-window">
            <div class="chat-header">
                <div>
                    <h3>🔥 SmartSales AI - מכונת מכירות</h3>
                    <div class="chat-status" id="chat-status">מוכן למכירות אגרסיביות!</div>
                </div>
                <button id="smartsales-close-chat">✖</button>
            </div>
            <div class="chat-messages" id="smartsales-messages">
                <div class="bot-message">
                    <div class="message-content">
                        🔥 <strong>שלום! אני מכונת המכירות הכי חכמה ואגרסיבית!</strong>
                        <br><br>
                        💰 <strong>מבצעים חמים היום בלבד:</strong>
                        <br>• הנחות עד 20% למהירי החלטה
                        <br>• מלאי מוגבל במוצרים פופולריים
                        <br>• משלוח מהיר בעוד 24 שעות
                        <br><br>
                        ⚡ <strong>מה אתה מחפש? אני אמצא לך ואדאג שתקבל הצעה שלא תוכל לסרב לה!</strong>
                    </div>
                </div>
            </div>
            <div class="chat-input-container">
                <input type="text" id="smartsales-input" placeholder="מה אתה מחפש? אני אמצא לך במחיר הכי טוב! 🔥">
                <button id="smartsales-send">🚀</button>
            </div>
            <div class="typing-indicator" id="smartsales-typing">
                🧠 מחפש את הדיל הכי טוב עבורך...
                <div class="typing-dots">
                    <span></span><span></span><span></span>
                </div>
            </div>
        </div>
    </div>

    <script>
        console.log('🚀 SmartSales AI Loading...');

        class SmartSalesAI {
            constructor() {
                console.log('🔧 Initializing SmartSales AI...');
                
                this.openaiKey = localStorage.getItem('smartsales_openai_key') || '';
                this.wooConfig = this.loadWooConfig();
                this.salesConfig = this.loadSalesConfig();
                this.conversationHistory = [];
                this.isOpen = false;
                this.activeTimers = [];
                
                // Demo products
                this.demoProducts = this.initDemoProducts();
                
                this.init();
            }

            init() {
                console.log('⚙️ Setting up event listeners...');
                this.bindEvents();
                this.updateStatuses();
                
                // Log successful initialization
                setTimeout(() => {
                    console.log('✅ SmartSales AI initialized successfully!');
                }, 100);
            }

            bindEvents() {
                // Chat bubble click
                const bubble = document.getElementById('smartsales-chat-bubble');
                if (bubble) {
                    bubble.addEventListener('click', (e) => {
                        console.log('🖱️ Chat bubble clicked');
                        this.toggleChat();
                    });
                }

                // Close button
                const closeBtn = document.getElementById('smartsales-close-chat');
                if (closeBtn) {
                    closeBtn.addEventListener('click', (e) => {
                        console.log('🖱️ Close button clicked');
                        e.preventDefault();
                        e.stopPropagation();
                        this.closeChat();
                    });
                }

                // Send button
                const sendBtn = document.getElementById('smartsales-send');
                if (sendBtn) {
                    sendBtn.addEventListener('click', (e) => {
                        console.log('🖱️ Send button clicked');
                        e.preventDefault();
                        this.sendMessage();
                    });
                }

                // Input field
                const input = document.getElementById('smartsales-input');
                if (input) {
                    input.addEventListener('keypress', (e) => {
                        if (e.key === 'Enter') {
                            console.log('⌨️ Enter key pressed');
                            e.preventDefault();
                            this.sendMessage();
                        }
                    });
                }

                console.log('✅ Event listeners attached successfully');
            }

            loadWooConfig() {
                const saved = localStorage.getItem('smartsales_woo_config');
                return saved ? JSON.parse(saved) : {
                    url: '',
                    consumerKey: '',
                    consumerSecret: ''
                };
            }

            loadSalesConfig() {
                const saved = localStorage.getItem('smartsales_sales_config');
                return saved ? JSON.parse(saved) : {
                    enableUrgency: true,
                    enableScarcity: true,
                    enableDiscounts: true,
                    discountPercent: 10
                };
            }

            initDemoProducts() {
                return [
                    {
                        id: 'demo_1',
                        name: 'משקפי שמש Ray-Ban Aviator Classic',
                        price: '₪459',
                        originalPrice: '₪599',
                        image: 'https://via.placeholder.com/80x80/4CAF50/ffffff?text=🕶️',
                        description: 'משקפי השמש הקלאסיים והפופולריים ביותר בעולם. הגנה מלאה מקרני UV',
                        inStock: true,
                        categories: ['משקפי שמש'],
                        features: ['UV 400', 'זכוכית מקורית', 'מסגרת מתכת'],
                        stockCount: 3
                    },
                    {
                        id: 'demo_2',
                        name: 'משקפי שמש Oakley Holbrook ספורטיביים',
                        price: '₪389',
                        originalPrice: '₪499',
                        image: 'https://via.placeholder.com/80x80/FF9800/ffffff?text=🏃',
                        description: 'משקפי שמש ספורטיביים עם עדשות פולרויד ומסגרת קלה במיוחד',
                        inStock: true,
                        categories: ['משקפי שמש', 'ספורט'],
                        features: ['פולרויד', 'עמידות מים', 'מסגרת קלה'],
                        stockCount: 2
                    },
                    {
                        id: 'demo_3',
                        name: 'iPhone 15 Pro Max 256GB',
                        price: '₪4,999',
                        originalPrice: '₪5,499',
                        image: 'https://via.placeholder.com/80x80/667eea/ffffff?text=📱',
                        description: 'הסמארטפון המתקדם ביותר עם מצלמה 48MP ושבב A17 Pro',
                        inStock: true,
                        categories: ['טלפונים'],
                        features: ['A17 Pro', '48MP', 'טיטניום', '256GB'],
                        stockCount: 2
                    },
                    {
                        id: 'demo_4',
                        name: 'Samsung Galaxy S24 Ultra',
                        price: '₪4,299',
                        originalPrice: '₪4,799',
                        image: 'https://via.placeholder.com/80x80/4CAF50/ffffff?text=📱',
                        description: 'סמארטפון אנדרואיד מתקדם עם S Pen ומצלמה 200MP',
                        inStock: true,
                        categories: ['טלפונים'],
                        features: ['200MP', 'S Pen', 'AI Features', '5000mAh'],
                        stockCount: 1
                    }
                ];
            }

            toggleChat() {
    console.log(`🔄 Toggle chat - Current state: ${this.isOpen ? 'open' : 'closed'}`);
    
    const chatWidget = document.getElementById('smartsales-chat-widget');
    const chatWindow = document.getElementById('smartsales-chat-window');
    const notification = document.querySelector('.chat-notification');
    
    if (!chatWidget || !chatWindow) {
        console.error('❌ Chat elements not found');
        return;
    }
    
    if (this.isOpen) {
        this.closeChat();
    } else {
        // Open chat
        console.log('📖 Opening chat...');
        chatWidget.classList.remove('minimized');
        chatWindow.classList.add('open');
        this.isOpen = true;
        
        if (notification) {
            notification.style.display = 'none';
        }
        
        // Focus input
        setTimeout(() => {
            const input = document.getElementById('smartsales-input');
            if (input) input.focus();
        }, 300);
        
        console.log('✅ Chat opened successfully');
    }
}

            closeChat() {
                console.log('📕 Closing chat...');
                
                const chatWidget = document.getElementById('smartsales-chat-widget');
                const chatWindow = document.getElementById('smartsales-chat-window');
                
                chatWindow.classList.remove('open');
                
                setTimeout(() => {
                    chatWidget.classList.add('minimized');
                    this.isOpen = false;
                    console.log('✅ Chat closed successfully');
                }, 300);
            }

            sendMessage() {
                console.log('📤 Sending message...');
                
                const input = document.getElementById('smartsales-input');
                if (!input) {
                    console.error('❌ Input element not found');
                    return;
                }
                
                const message = input.value.trim();
                console.log('📝 Message content:', message);
                
                if (!message) {
                    console.log('⚠️ Empty message, skipping');
                    return;
                }

                // Add user message
                this.addMessage(message, 'user');
                input.value = '';
                
                // Show typing
                this.showTyping();
                
                // Process message
                setTimeout(() => {
                    this.processMessage(message);
                }, 1000 + Math.random() * 1000);
                
                console.log('✅ Message sent successfully');
            }

            addMessage(content, sender) {
                console.log(`💬 Adding ${sender} message:`, content);
                
                const messagesContainer = document.getElementById('smartsales-messages');
                if (!messagesContainer) {
                    console.error('❌ Messages container not found');
                    return;
                }
                
                const messageDiv = document.createElement('div');
                messageDiv.className = `${sender}-message`;
                messageDiv.innerHTML = `<div class="message-content">${content}</div>`;
                
                messagesContainer.appendChild(messageDiv);
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
                
                this.conversationHistory.push({
                    sender,
                    message: content,
                    timestamp: new Date().toISOString()
                });
                
                console.log('✅ Message added successfully');
            }

            showTyping() {
                const typing = document.getElementById('smartsales-typing');
                if (typing) {
                    typing.classList.add('show');
                }
            }

            hideTyping() {
                const typing = document.getElementById('smartsales-typing');
                if (typing) {
                    typing.classList.remove('show');
                }
            }

            async processMessage(message) {
                console.log('🤖 Processing message:', message);
                
                this.hideTyping();
                
                const context = this.analyzeMessage(message);
                console.log('📊 Message context:', context);
                
                let response = '';
                let products = [];
                
                if (context.hasProductIntent) {
                    products = this.findRelevantProducts(context.searchTerms);
                    response = await this.generateProductResponse(message, context, products);
                } else {
                    response = await this.generateGeneralResponse(message, context);
                }
                
                this.addMessage(response, 'bot');
                
                if (products.length > 0) {
                    this.displayProducts(products, context);
                }
                
                console.log('✅ Message processed successfully');
            }

            analyzeMessage(message) {
                const messageLower = message.toLowerCase();
                
                const productKeywords = ['מחפש', 'רוצה', 'צריך', 'מעוניין', 'לקנות', 'משקפי שמש', 'טלפון', 'מחשב'];
                const hasProductIntent = productKeywords.some(keyword => messageLower.includes(keyword));
                
                const searchTerms = [];
                if (messageLower.includes('משקפי שמש') || messageLower.includes('משקפיים')) {
                    searchTerms.push('משקפי שמש');
                }
                if (messageLower.includes('טלפון') || messageLower.includes('סמארטפון')) {
                    searchTerms.push('טלפונים');
                }
                
                const urgencyKeywords = ['דחוף', 'מהר', 'עכשיו', 'היום', 'מיד'];
                const urgency = urgencyKeywords.some(keyword => messageLower.includes(keyword)) ? 0.8 : 0.3;
                
                const priceKeywords = ['מחיר', 'זול', 'יקר', 'הנחה', 'מבצע'];
                const priceInterest = priceKeywords.some(keyword => messageLower.includes(keyword));
                
                return {
                    hasProductIntent,
                    searchTerms,
                    urgency,
                    priceInterest,
                    emotion: messageLower.includes('מעולה') ? 'excited' : 'neutral'
                };
            }

            findRelevantProducts(searchTerms) {
                console.log('🔍 Searching products for terms:', searchTerms);
                
                if (searchTerms.length === 0) {
                    return this.demoProducts.slice(0, 2);
                }
                
                const relevant = this.demoProducts.filter(product => 
                    searchTerms.some(term => 
                        product.categories.includes(term) || 
                        product.name.toLowerCase().includes(term.toLowerCase())
                    )
                );
                
                console.log('📦 Found products:', relevant.length);
                return relevant.slice(0, 2);
            }

            async generateProductResponse(message, context, products) {
                if (!this.openaiKey) {
                    return this.generateLocalProductResponse(context, products);
                }

                try {
                    const systemPrompt = `אתה מומחה מכירות אגרסיבי באתר אי-קומרס ישראלי.
                    
הלקוח חיפש: ${context.searchTerms.join(', ')}
מצאתי ${products.length} מוצרים רלוונטיים.
דחיפות: ${context.urgency > 0.5 ? 'גבוהה' : 'רגילה'}
עניין במחיר: ${context.priceInterest ? 'כן' : 'לא'}

תענה בעברית, תהיה אגרסיבי אבל ידידותי. השתמש בטכניקות מכירה חזקות!
תגובה של 2-3 שורות מקסימום.`;

                    const response = await fetch('https://api.openai.com/v1/chat/completions', {
                        method: 'POST',
                        headers: {
                            'Authorization': `Bearer ${this.openaiKey}`,
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            model: 'gpt-4',
                            messages: [
                                { role: 'system', content: systemPrompt },
                                { role: 'user', content: message }
                            ],
                            max_tokens: 150,
                            temperature: 0.8
                        })
                    });

                    if (response.ok) {
                        const data = await response.json();
                        return data.choices[0].message.content.trim();
                    }
                } catch (error) {
                    console.log('OpenAI failed, using local response');
                }

                return this.generateLocalProductResponse(context, products);
            }

            generateLocalProductResponse(context, products) {
                if (products.length === 0) {
                    return 'אופס! לא מצאתי בדיוק מה שחיפשת, אבל יש לי הצעות מעולות אחרות! מה בדיוק אתה מחפש? 🤔';
                }

                const responses = [
                    `🔥 מצאתי בדיוק מה שאתה מחפש! יש לי מבצע מיוחד שמסתיים בעוד כמה דקות!`,
                    `⚡ וואו! יש לי ${products.length} אופציות מעולות עבורך עם הנחות שטופות!`,
                    `💰 זה היום המזל שלך! מצאתי לך את המוצרים הטובים ביותר במחירי השקה!`
                ];

                return responses[Math.floor(Math.random() * responses.length)];
            }

            async generateGeneralResponse(message, context) {
                if (!this.openaiKey) {
                    return this.generateLocalGeneralResponse(context);
                }

                try {
                    const systemPrompt = `אתה מומחה מכירות חכם ואגרסיבי באתר אי-קומרס ישראלי.
                    
הרגש: ${context.emotion}
דחיפות: ${context.urgency > 0.5 ? 'גבוהה' : 'רגילה'}

תענה בעברית, תהיה חם ומקצועי. עודד לקראת רכישה.
תגובה של 2-3 שורות מקסימום.`;

                    const response = await fetch('https://api.openai.com/v1/chat/completions', {
                        method: 'POST',
                        headers: {
                            'Authorization': `Bearer ${this.openaiKey}`,
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            model: 'gpt-4',
                            messages: [
                                { role: 'system', content: systemPrompt },
                                { role: 'user', content: message }
                            ],
                            max_tokens: 100,
                            temperature: 0.7
                        })
                    });

                    if (response.ok) {
                        const data = await response.json();
                        return data.choices[0].message.content.trim();
                    }
                } catch (error) {
                    console.log('OpenAI failed, using local response');
                }

                return this.generateLocalGeneralResponse(context);
            }

            generateLocalGeneralResponse(context) {
                const responses = {
                    excited: [
                        'אני רואה שאתה מתלהב! איזה סוג מוצרים מעניין אותך הכי הרבה? 😊',
                        'זה נהדר! בואו נמצא לך משהו מדהים - מה אתה מחפש? 🎉'
                    ],
                    neutral: [
                        'תודה על השאלה! איך בדיוק אוכל לעזור לך היום? 😊',
                        'אני כאן לעזור! על איזה מוצרים תרצה לשמוע? 🛍️',
                        'שלום! מה מעניין אותך היום? יש לי המון המלצות טובות ✨'
                    ]
                };

                const emotionResponses = responses[context.emotion] || responses.neutral;
                return emotionResponses[Math.floor(Math.random() * emotionResponses.length)];
            }

            displayProducts(products, context) {
                console.log('🏪 Displaying products:', products.length);
                
                const messagesContainer = document.getElementById('smartsales-messages');
                
                products.forEach((product, index) => {
                    setTimeout(() => {
                        const productDiv = document.createElement('div');
                        productDiv.className = 'bot-message';
                        
                        const isLimitedStock = this.salesConfig.enableScarcity && (product.stockCount <= 3 || Math.random() < 0.6);
                        const discount = this.calculateDiscount(product);
                        const urgencyTimer = this.salesConfig.enableUrgency && (context.urgency > 0.5 || Math.random() < 0.7);
                        
                        const limitedStockClass = isLimitedStock ? 'limited-stock' : '';
                        
                        productDiv.innerHTML = `
                            <div class="message-content">
                                <div class="product-card ${limitedStockClass}">
                                    <img src="${product.image}" alt="${product.name}" class="product-image">
                                    
                                    <div class="product-name">${product.name}</div>
                                    
                                    <div class="product-price">
                                        <span class="current-price">${product.price}</span>
                                        ${product.originalPrice ? `<span class="original-price">${product.originalPrice}</span>` : ''}
                                        ${discount > 0 ? `<span class="discount-badge">-${discount}%</span>` : ''}
                                    </div>
                                    
                                    <div class="product-description">${product.description}</div>
                                    
                                    ${product.features ? `
                                        <div class="product-features">
                                            ${product.features.map(feature => `<span class="feature-tag">${feature}</span>`).join('')}
                                        </div>
                                    ` : ''}
                                    
                                    <div style="clear: both; margin: 10px 0; font-size: 11px; color: #667eea;">
                                        ⭐ 4.8/5 ביקורות | 
                                        ${product.inStock ? '✅ במלאי' : '❌ אזל מהמלאי'} |
                                        🚛 משלוח מהיר
                                        ${isLimitedStock ? `<br><strong style="color: #ef4444;">🔥 נשארו רק ${product.stockCount || Math.floor(Math.random() * 3) + 1} יחידות!</strong>` : ''}
                                    </div>
                                    
                                    <div class="product-actions">
                                        <button class="action-button urgent-action" onclick="handlePurchase('${product.id}', ${discount})">
                                            🔥 קנה עכשיו -${this.salesConfig.discountPercent}%
                                        </button>
                                        <button class="action-button secondary-action" onclick="addToCart('${product.id}')">
                                            🛒 הוסף לסל
                                        </button>
                                    </div>
                                </div>
                                
                                ${urgencyTimer ? this.createUrgencyTimer() : ''}
                            </div>
                        `;
                        
                        messagesContainer.appendChild(productDiv);
                        messagesContainer.scrollTop = messagesContainer.scrollHeight;
                        
                    }, index * 300);
                });
                
                console.log('✅ Products displayed successfully');
            }

            createUrgencyTimer() {
                const timeLeft = 120; // 2 minutes
                const timerId = 'timer_' + Date.now();
                
                const timerHtml = `
                    <div class="urgency-timer" id="${timerId}">
                        <div style="font-size: 14px; margin-bottom: 8px;">
                            ⏰ <strong>המבצע מסתיים בעוד:</strong>
                        </div>
                        <div class="timer-display" id="${timerId}_display">02:00</div>
                        <div style="font-size: 12px; margin-top: 8px;">
                            🚨 אחרי זה המחיר חוזר למלא!
                        </div>
                    </div>
                `;
                
                // Start countdown
                setTimeout(() => {
                    this.startCountdown(timerId, timeLeft);
                }, 100);
                
                return timerHtml;
            }

            startCountdown(timerId, timeLeft) {
                const timer = setInterval(() => {
                    const minutes = Math.floor(timeLeft / 60);
                    const seconds = timeLeft % 60;
                    const display = document.getElementById(`${timerId}_display`);
                    
                    if (display) {
                        display.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
                    }
                    
                    timeLeft--;
                    
                    if (timeLeft < 0) {
                        clearInterval(timer);
                        if (display) {
                            display.parentElement.innerHTML = '<div style="color: #ef4444; font-weight: bold;">⏰ המבצע הסתיים! המחיר חזר למלא</div>';
                        }
                    }
                }, 1000);
                
                this.activeTimers.push(timer);
            }

            calculateDiscount(product) {
                if (!product.originalPrice || !this.salesConfig.enableDiscounts) return 0;
                
                const original = parseInt(product.originalPrice.replace(/[^\d]/g, ''));
                const current = parseInt(product.price.replace(/[^\d]/g, ''));
                
                return Math.round((1 - current / original) * 100);
            }

            updateStatuses() {
                // Update OpenAI status
                const openaiStatus = document.getElementById('openai-status');
                if (this.openaiKey && openaiStatus) {
                    openaiStatus.textContent = '✅ GPT-4 מוכן ופעיל!';
                    openaiStatus.className = 'status-indicator status-success';
                    openaiStatus.style.display = 'block';
                }
                
                // Update WooCommerce status
                const wooStatus = document.getElementById('woo-status');
                if (this.wooConfig.url && this.wooConfig.consumerKey && wooStatus) {
                    wooStatus.textContent = '✅ מחובר לחנות!';
                    wooStatus.className = 'status-indicator status-success';
                    wooStatus.style.display = 'block';
                }
                
                // Update chat status
                const chatStatus = document.getElementById('chat-status');
                if (chatStatus) {
                    if (this.openaiKey && this.wooConfig.url) {
                        chatStatus.textContent = 'מוכן למכירות מקסימליות! 🔥';
                    } else if (this.openaiKey) {
                        chatStatus.textContent = 'GPT פעיל | מוצרי דמו זמינים';
                    } else {
                        chatStatus.textContent = 'מצב דמו | הגדר API למכירות מלאות';
                    }
                }
            }
        }

        // Global functions
        async function saveAndTestOpenAIKey() {
            console.log('🔑 Testing OpenAI key...');
            
            const key = document.getElementById('openai-key').value.trim();
            const status = document.getElementById('openai-status');
            const button = document.getElementById('openai-save-btn');
            
            if (!key) {
                status.textContent = '❌ אנא הכנס מפתח API';
                status.className = 'status-indicator status-error';
                status.style.display = 'block';
                return;
            }
            
            // Show loading
            button.disabled = true;
            button.textContent = '🔄 בודק מפתח...';
            status.textContent = '🔄 בודק תקינות המפתח...';
            status.className = 'status-indicator status-loading';
            status.style.display = 'block';
            
            try {
                const response = await fetch('https://api.openai.com/v1/models', {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${key}`,
                        'Content-Type': 'application/json'
                    }
                });
                
                if (response.ok) {
                    localStorage.setItem('smartsales_openai_key', key);
                    window.smartSales.openaiKey = key;
                    window.smartSales.updateStatuses();
                    
                    status.textContent = '✅ מפתח תקין! GPT-4 מופעל!';
                    status.className = 'status-indicator status-success';
                    button.textContent = '✅ מפתח שמור ופעיל';
                    
                    console.log('✅ OpenAI key validated successfully');
                } else {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
            } catch (error) {
                console.error('❌ OpenAI key validation failed:', error);
                status.textContent = `❌ מפתח לא תקין: ${error.message}`;
                status.className = 'status-indicator status-error';
                button.textContent = '💾 שמור ובדוק מפתח';
            }
            
            button.disabled = false;
        }

        function saveWooConfig() {
            const config = {
                url: document.getElementById('woo-url').value.trim(),
                consumerKey: document.getElementById('woo-consumer-key').value.trim(),
                consumerSecret: document.getElementById('woo-consumer-secret').value.trim()
            };
            
            if (config.url && config.consumerKey && config.consumerSecret) {
                localStorage.setItem('smartsales_woo_config', JSON.stringify(config));
                window.smartSales.wooConfig = config;
                window.smartSales.updateStatuses();
                
                const status = document.getElementById('woo-status');
                status.textContent = '✅ הגדרות נשמרו!';
                status.className = 'status-indicator status-success';
                status.style.display = 'block';
            }
        }

        async function testWooConnection() {
            const status = document.getElementById('woo-status');
            status.textContent = '🔄 בודק חיבור...';
            status.className = 'status-indicator status-loading';
            status.style.display = 'block';
            
            try {
                const { url, consumerKey, consumerSecret } = window.smartSales.wooConfig;
                const response = await fetch(`${url}/wp-json/wc/v3/products?per_page=1`, {
                    headers: {
                        'Authorization': 'Basic ' + btoa(`${consumerKey}:${consumerSecret}`)
                    }
                });
                
                if (response.ok) {
                    status.textContent = '✅ חיבור תקין! החנות מחוברת!';
                    status.className = 'status-indicator status-success';
                } else {
                    throw new Error(`HTTP ${response.status}`);
                }
            } catch (error) {
                status.textContent = `❌ שגיאת חיבור: ${error.message}`;
                status.className = 'status-indicator status-error';
            }
        }

        function saveSalesConfig() {
            const config = {
                enableUrgency: document.getElementById('enable-urgency').checked,
                enableScarcity: document.getElementById('enable-scarcity').checked,
                enableDiscounts: document.getElementById('enable-discounts').checked,
                discountPercent: parseInt(document.getElementById('discount-percent').value) || 10
            };
            
            localStorage.setItem('smartsales_sales_config', JSON.stringify(config));
            window.smartSales.salesConfig = config;
            
            const status = document.getElementById('sales-status');
            status.textContent = '🔥 מכירות אגרסיביות מופעלות! מוכן להכות!';
            status.className = 'status-indicator status-warning';
        }

        function startDemo(type) {
            console.log('🎮 Starting demo:', type);
            
            if (!window.smartSales.isOpen) {
                window.smartSales.toggleChat();
            }
            
            const scenarios = {
                sunglasses: 'אני מחפש משקפי שמש ספורטיביות לריצה',
                phone: 'יש לכם טלפונים במחיר טוב?',
                urgent: 'זה דחוף! אני צריך מוצר טוב עד מחר'
            };
            
            const input = document.getElementById('smartsales-input');
            if (input) {
                input.value = scenarios[type] || scenarios.sunglasses;
                
                setTimeout(() => {
                    window.smartSales.sendMessage();
                }, 500);
            }
        }

                function clearChat() {
            console.log('🗑️ Clearing chat...');
            
            const messagesContainer = document.getElementById('smartsales-messages');
            if (messagesContainer) {
                messagesContainer.innerHTML = `
                    <div class="bot-message">
                        <div class="message-content">
                            🔥 <strong>שלום! אני מכונת המכירות הכי חכמה ואגרסיבית!</strong>
                            <br><br>
                            💰 <strong>מבצעים חמים היום בלבד:</strong>
                            <br>• הנחות עד 20% למהירי החלטה
                            <br>• מלאי מוגבל במוצרים פופולריים
                            <br>• משלוח מהיר בעוד 24 שעות
                            <br><br>
                            ⚡ <strong>מה אתה מחפש? אני אמצא לך ואדאג שתקבל הצעה שלא תוכל לסרב לה!</strong>
                        </div>
                    </div>
                `;
                
                window.smartSales.conversationHistory = [];
                console.log('✅ Chat cleared successfully');
            }
        }

        function handlePurchase(productId, discount) {
            console.log(`🔥 URGENT PURCHASE: Product ${productId} with ${discount}% discount`);
            
            window.smartSales.addMessage(
                `🎉 מעולה! המוצר נוסף לסל עם ההנחה המיוחדת! רוצה להמשיך לתשלום או שאמצא לך עוד מוצרים משלימים?`,
                'bot'
            );
            
            // Add upselling message
            setTimeout(() => {
                window.smartSales.addMessage(
                    `💡 לקוחות שקנו את המוצר הזה קנו גם: אוזניות, מגן מסך, ואביזרים נוספים. רוצה לראות המלצות עם הנחה נוספת?`,
                    'bot'
                );
            }, 2000);
            
            alert(`🛒 המוצר נוסף לסל עם הנחה של ${discount}%!\n🔥 זה הזמן לסגור את העסקה!`);
        }

        function addToCart(productId) {
            console.log(`🛒 Product ${productId} added to cart`);
            
            window.smartSales.addMessage(
                `✅ נוסף לסל! כעת יש לך הזדמנות לקבל עוד 5% הנחה אם תוסיף מוצר נוסף. מה תגיד?`,
                'bot'
            );
            
            // Trigger cross-selling after adding to cart
            setTimeout(() => {
                window.smartSales.addMessage(
                    `🎯 רק שנייה! משלוח חינם החל מ-300₪. הסל שלך עכשיו ב-${Math.floor(Math.random() * 200) + 250}₪. רוצה שאמצא לך משהו קטן להשלמה?`,
                    'bot'
                );
            }, 2500);
            
            alert('🛒 המוצר נוסף לסל בהצלחה!');
        }

        // Initialize the Smart Sales AI
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🚀 DOM Content Loaded - Initializing SmartSales AI...');
            
            try {
                window.smartSales = new SmartSalesAI();
                console.log('✅ SmartSales AI initialized successfully!');
                
                // Add welcome message after 3 seconds
                setTimeout(() => {
                    if (!localStorage.getItem('smartsales_ultimate_welcomed')) {
                        const welcomeMessage = `
🎉 ברוכים הבאים למכונת המכירות הכי אגרסיבית שקיימת!

✅ הגדר מפתח OpenAI לתגובות חכמות
✅ הכנס פרטי WooCommerce לחיבור לחנות האמיתית  
✅ הפעל מכירות אגרסיביות עם טיימרים והנחות

המכונה מוכנה לשבור שיאי מכירות! 🚀

לחץ על הבועה כדי לפתוח את הצ'אט ולהתחיל!
                        `;
                        
                        alert(welcomeMessage);
                        localStorage.setItem('smartsales_ultimate_welcomed', 'true');
                    }
                }, 3000);
                
            } catch (error) {
                console.error('❌ Failed to initialize SmartSales AI:', error);
                
                // Emergency fallback
                document.body.innerHTML += `
                    <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); 
                                background: #ef4444; color: white; padding: 20px; border-radius: 10px; 
                                z-index: 99999; text-align: center;">
                        <h3>⚠️ שגיאה באתחול</h3>
                        <p>יש בעיה עם הטעינה. אנא רענן את הדף.</p>
                        <button onclick="location.reload()" style="background: white; color: #ef4444; 
                                border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer; 
                                margin-top: 10px;">רענן דף</button>
                    </div>
                `;
            }
        });

        // Error handling
        window.addEventListener('error', function(e) {
            console.error('🚨 Global Error:', e.error);
            
            // Show user-friendly error message
            if (window.smartSales && window.smartSales.isOpen) {
                setTimeout(() => {
                    window.smartSales.addMessage(
                        '😅 יש לי בעיה טכנית קטנה, אבל אל תדאג! אני עדיין כאן לעזור לך למצוא את המוצר המושלם. מה אתה מחפש?',
                        'bot'
                    );
                }, 1000);
            }
        });

        // Browser compatibility check
        function checkCompatibility() {
            const features = {
                fetch: 'fetch' in window,
                localStorage: 'localStorage' in window,
                ES6: typeof Symbol !== 'undefined',
                Promise: 'Promise' in window
            };
            
            const unsupported = Object.entries(features).filter(([key, supported]) => !supported);
            
            if (unsupported.length > 0) {
                console.warn('⚠️ Some features may not work:', unsupported.map(([key]) => key));
                
                // Show compatibility warning
                if (unsupported.length > 2) {
                    setTimeout(() => {
                        alert('⚠️ הדפדפן שלך לא תומך בכל התכונות. אנא השתמש בדפדפן מעודכן יותר לחוויה מיטבית.');
                    }, 2000);
                }
            }
        }

        checkCompatibility();

        // Performance monitoring
        function monitorPerformance() {
            if ('performance' in window) {
                const loadTime = performance.timing.loadEventEnd - performance.timing.navigationStart;
                console.log(`⚡ Page load time: ${loadTime}ms`);
                
                if (loadTime > 5000) {
                    console.warn('⚠️ Slow page load detected');
                }
            }
        }

        window.addEventListener('load', monitorPerformance);

        // Mobile optimization
        if (window.innerWidth <= 768) {
            document.addEventListener('touchstart', function() {
                // Enable hardware acceleration on mobile
                const chatWindow = document.getElementById('smartsales-chat-window');
                if (chatWindow) {
                    chatWindow.style.transform += ' translateZ(0)';
                }
            }, { passive: true });
        }

        // Prevent zoom on input focus (mobile)
        document.addEventListener('touchstart', function() {
            const viewport = document.querySelector('meta[name=viewport]');
            if (viewport) {
                viewport.setAttribute('content', 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no');
            }
        });

        // Debug mode for development
        if (localStorage.getItem('smartsales_debug') === 'true') {
            console.log('🐛 Debug mode enabled');
            
            // Add debug panel
            const debugPanel = document.createElement('div');
            debugPanel.style.cssText = `
                position: fixed; top: 10px; left: 10px; background: rgba(0,0,0,0.8); 
                color: white; padding: 10px; border-radius: 5px; font-family: monospace; 
                font-size: 12px; z-index: 99998; max-width: 300px; max-height: 200px; 
                overflow: auto;
            `;
            debugPanel.innerHTML = `
                <h4>🐛 Debug Panel</h4>
                <div id="debug-log"></div>
                <button onclick="this.parentElement.remove()" style="background: #ef4444; color: white; border: none; padding: 5px; border-radius: 3px; cursor: pointer; margin-top: 5px;">Close</button>
            `;
            document.body.appendChild(debugPanel);
            
            // Override console.log for debug panel
            const originalLog = console.log;
            console.log = function(...args) {
                originalLog.apply(console, args);
                const debugLog = document.getElementById('debug-log');
                if (debugLog) {
                    debugLog.innerHTML += `<div>${args.join(' ')}</div>`;
                    debugLog.scrollTop = debugLog.scrollHeight;
                }
            };
        }

        // Analytics integration placeholder
        function initAnalytics() {
            // Google Analytics integration
            if (typeof gtag !== 'undefined') {
                gtag('config', 'GA_MEASUREMENT_ID', {
                    page_title: 'SmartSales AI Chat',
                    page_location: window.location.href
                });
            }
            
            // Facebook Pixel integration
            if (typeof fbq !== 'undefined') {
                fbq('track', 'PageView');
            }
            
            console.log('📊 Analytics initialized');
        }

        // Initialize analytics when available
        setTimeout(initAnalytics, 2000);

        // Service Worker registration for PWA (optional)
        if ('serviceWorker' in navigator && location.protocol === 'https:') {
            navigator.serviceWorker.register('/sw.js')
                .then(() => console.log('🔧 Service Worker registered'))
                .catch(() => console.log('⚠️ Service Worker registration failed'));
        }

        console.log('🎯 SmartSales AI script loaded completely!');
    </script>
</body>
</html>
